var searchIndex = JSON.parse('{\
"base64":{"doc":"Configs","t":"RRNNREDNERNNNNRRNRRNLLLLLLLLLLLLLFLFFFLAFFFFLLLLLLLLLLLLLLLALLLLLLLLLLLLLADLLLLLLLLLLDLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BCRYPT","BINHEX","Bcrypt","BinHex","CRYPT","CharacterSet","Config","Crypt","DecodeError","IMAP_MUTF7","ImapMutf7","InvalidByte","InvalidLastSymbol","InvalidLength","STANDARD","STANDARD_NO_PAD","Standard","URL_SAFE","URL_SAFE_NO_PAD","UrlSafe","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode_allow_trailing_bits","decode_config","decode_config_buf","decode_config_slice","description","display","encode","encode_config","encode_config_buf","encode_config_slice","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","into","into","into","new","pad","provide","read","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","Base64Display","borrow","borrow_mut","fmt","from","into","to_string","try_from","try_into","type_id","with_config","DecoderReader","borrow","borrow_mut","fmt","from","into","new","read","try_from","try_into","type_id","EncoderStringWriter","EncoderWriter","borrow","borrow","borrow_mut","borrow_mut","drop","finish","flush","flush","fmt","from","from","from","into","into","into_inner","new","new","try_from","try_from","try_into","try_into","type_id","type_id","write","write"],"q":[[0,"base64"],[74,"base64::display"],[85,"base64::read"],[96,"base64::write"]],"d":["Bcrypt character set","BinHex character set","The bcrypt character set (uses …","The character set used in BinHex 4.0 files.","As per <code>crypt(3)</code> requirements","Available encoding character sets","Contains configuration parameters for base64 encoding","The <code>crypt(3)</code> character set (uses …","Errors that can occur while decoding.","IMAP modified UTF-7 requirements","The character set used in IMAP-modified UTF-7 (uses <code>+</code> and <code>,</code>…","An invalid byte was found in the input. The offset and …","The last non-padding input symbol’s encoded 6 bits have …","The length of the input is invalid. A typical cause of …","Standard character set with padding.","Standard character set without padding.","The standard character set (uses <code>+</code> and <code>/</code>).","URL-safe character set with padding","URL-safe character set without padding","The URL safe character set (uses <code>-</code> and <code>_</code>).","","","","","","","","","","","","","","Decode from string reference as octets. Returns a Result …","Sets whether to emit errors for nonzero trailing bits.","Decode from string reference as octets. Returns a Result …","Decode from string reference as octets. Writes into the …","Decode the input into the provided output slice.","","Enables base64’d output anywhere you might use a <code>Display</code> …","Encode arbitrary octets as base64. Returns a String. …","Encode arbitrary octets as base64. Returns a String.","Encode arbitrary octets as base64. Writes into the …","Encode arbitrary octets as base64. Writes into the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>Config</code>.","Sets whether to pad output with <code>=</code> characters.","","Implementations of <code>io::Read</code> to transparently decode base64.","","","","","","","","","","","","","","Implementations of <code>io::Write</code> to transparently handle …","A convenience wrapper for base64’ing bytes into a format …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Create a <code>Base64Display</code> with the provided config.","A <code>Read</code> implementation that decodes base64 data read from …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new decoder that will read from the provided …","Decode input from the wrapped reader.","","","","A <code>Write</code> implementation that base64-encodes data using the …","A <code>Write</code> implementation that base64 encodes data before …","","","","","","Encode all remaining buffered data and write it, including …","Because this is usually treated as OK to call multiple …","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a EncoderStringWriter that will append to the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Encode all remaining buffered data, including any trailing …","Create a new encoder that will write to the provided …","Create a EncoderStringWriter that will encode into a new …","","","","","","","Encode input and then write to the delegate writer.",""],"i":[0,0,4,4,0,0,0,4,0,0,4,1,1,1,0,0,4,0,0,4,1,4,5,1,4,5,1,1,4,5,1,4,5,0,5,0,0,0,1,0,0,0,0,0,1,1,1,1,4,5,1,4,5,1,4,5,5,5,1,0,1,4,5,1,1,4,5,1,4,5,1,4,5,0,0,19,19,19,19,19,19,19,19,19,19,0,22,22,22,22,22,22,22,22,22,22,0,0,25,26,25,26,25,25,25,26,25,25,26,26,25,26,26,25,26,25,26,25,26,25,26,25,26],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,[[3,[2]]]],[1,1],[4,4],[5,5],[[]],[[]],[[]],[[[8,[[7,[6]]]]],[[10,[[9,[6]],1]]]],[[5,11],5],[[[8,[[7,[6]]]],5],[[10,[[9,[6]],1]]]],[[[8,[[7,[6]]]],5,[9,[6]]],[[10,[1]]]],[[[8,[[7,[6]]]],5,[7,[6]]],[[10,[12,1]]]],[1,13],0,[[[8,[[7,[6]]]]],14],[[[8,[[7,[6]]]],5],14],[[[8,[[7,[6]]]],5,14]],[[[8,[[7,[6]]]],5,[7,[6]]],12],[[1,1],11],[[],11],[[1,15],16],[[1,15],16],[[4,15],16],[[5,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[4,11],5],[[5,11],5],[17],0,[[]],[[]],[[]],[[],14],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],0,0,[[]],[[]],[[19,15],[[10,[20]]]],[[]],[[]],[[],14],[[],10],[[],10],[[],18],[[[7,[6]],5],19],0,[[]],[[]],[[[22,[21]],15],16],[[]],[[]],[[21,5],[[22,[21]]]],[[[22,[21]],[7,[6]]],[[23,[12]]]],[[],10],[[],10],[[],18],0,0,[[]],[[]],[[]],[[]],[[[25,[24]]]],[[[25,[24]]],[[23,[24]]]],[[[25,[24]]],23],[[[26,[0]]],23],[[[25,[24]],15],16],[[]],[[]],0,[[]],[[]],0,[[24,5],[[25,[24]]]],[5,[[26,[14]]]],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[[25,[24]],[7,[6]]],[[23,[12]]]],[[[26,[0]],[7,[6]]],[[23,[12]]]]],"c":[],"p":[[4,"DecodeError"],[8,"Error"],[4,"Option"],[4,"CharacterSet"],[3,"Config"],[15,"u8"],[15,"slice"],[8,"AsRef"],[3,"Vec"],[4,"Result"],[15,"bool"],[15,"usize"],[15,"str"],[3,"String"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[3,"TypeId"],[3,"Base64Display"],[3,"Error"],[8,"Read"],[3,"DecoderReader"],[6,"Result"],[8,"Write"],[3,"EncoderWriter"],[3,"EncoderStringWriter"]]},\
"lib":{"doc":"","t":"INENNNNNDINNNNNMLLLLKLFMFMLLFFMMLLMKLAMMFAFMFLLLLLLFFF","n":["Build","Caption","Handle","Heading","Image","List","Mermaid","OrdList","Presentation","Process","SubHeading","Table","Text","URLVideo","Video","body","borrow","borrow","borrow_mut","borrow_mut","build","build","close_last_handle","css_path","file_base64","footer","from","from","generate_logo","generate_mermaid_script","handle","header","into","into","logo_path","process","process","script","script_mermaid","script_path","stv_to_html","style","table_generator","title","trim_element","try_from","try_from","try_into","try_into","type_id","type_id","validate_stv","generate_script","generate_style"],"q":[[0,"lib"],[52,"lib::script"],[53,"lib::style"]],"d":["Constrói o arquivo final <code>file.html</code> como método do tipo …","Indica legendas. ","Possíveis handles que indicam como a próxima linha será …","Indica elemento <code>&lt;h1&gt;</code>.","Indica elemento <code>&lt;figure&gt;</code>.","Indica início do elemento <code>&lt;ul&gt;</code> e que os próximos …","Indica as próximas linhas como linhas literais de …","Indica início do elemento <code>&lt;ol&gt;</code> e que os próximos …","Abstração de uma apresentação.","Opera sobre um tipo Presentation confeccionando o <code>HTLM</code> …","Indica elemento <code>&lt;h2&gt;</code>.","Indica o construtor de <code>HTML</code> a partir de texto literal em …","TODO.","Indica elemento <code>&lt;video&gt;</code> construída a partir de URL.","Indica elemento <code>&lt;video&gt;</code>.","","","","","","","","Fecha o último handle para que a tag correspondente seja …","","Converte arquivo apontado para base64 e incorpora o …","","Returns the argument unchanged.","Returns the argument unchanged.","Aponta uma logo para ser renderizada caso exista.","Fornece um script padrão para as âncoras <code>.mermaid</code> ou …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Método que opera sobre <code>Presentation</code> e recebe String como …","Confecciona um script padrão ou retorna de um arquivo …","","","Corta a extensão <code>.stv</code> e apensa <code>.html</code> o nome de arquivo …","Confecciona um CSS padrão ou retorna de um arquivo …","Processa linhas como <code>rows</code> de uma table em <code>HTML</code>. ","","Remove a âncora da linha que a contém.","","","","","","","Valida o arquivo de entrada como um stv válido. …","Cria um script em JavaScript para compilação, podendo …","Cria um estilo padrão de CSS para compilação quando no …"],"i":[0,6,0,6,6,6,6,6,0,0,6,6,6,6,6,5,6,5,6,5,12,5,0,5,0,5,6,5,0,0,5,5,6,5,5,13,5,0,5,5,0,0,0,5,0,6,5,6,5,6,5,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,[[4,[[3,[2]]]]]],[[5,1],[[4,[[3,[2]]]]]],[[[7,[6]]],8],0,[[1,8],[[4,[1,[3,[2]]]]]],0,[[]],[[]],[[[7,[1]]],1],[[[7,[1]]],1],0,0,[[]],[[]],0,[[1,9],[[4,[[3,[2]]]]]],[[5,1,9],[[4,[[3,[2]]]]]],0,0,0,[8,1],0,[[1,9],1],0,[1,1],[[],4],[[],4],[[],4],[[],4],[[],10],[[],10],[8,[[4,[11]]]],[[[7,[1]]],1],[[[7,[1]]],1]],"c":[],"p":[[3,"String"],[8,"Error"],[3,"Box"],[4,"Result"],[3,"Presentation"],[4,"Handle"],[4,"Option"],[15,"str"],[15,"usize"],[3,"TypeId"],[15,"bool"],[8,"Build"],[8,"Process"]]},\
"stultusvisio":{"doc":"","t":"F","n":["main"],"q":[[0,"stultusvisio"]],"d":[""],"i":[0],"f":[[[],[[3,[[2,[1]]]]]]],"c":[],"p":[[8,"Error"],[3,"Box"],[4,"Result"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
